import requests
from Printer import Printer
import time
import pickle
__author__ = "Simon Heck"




control_areas = {"A80SAT" : {"KPDK" : ((33.88584377733848, -84.31037981332257),(33.86777939460844, -84.29467279840003)),
                            "KAHN" : ((33.9540766285094, -83.34223955210349),(33.940868873503796, -83.31558912314766)),
                            "KFTY" : ((33.78279814861325, -84.53293817967267),(33.76835092467223, -84.5060731738479)),
                            "KRYY" : ((34.01806592382934, -84.60951066352965),(34.00856797197957, -84.58389020270525)),
                            "KMGE" : ((33.92439571872648, -84.539492361338),(33.90719431974648, -84.49717783156599)),
                            "KLZU" : ((33.981190473249285, -83.97486176323365),(33.974784696390905, -83.94932713309667)),
                            "KMCN" : ((32.706494713728155, -83.66622624254232),(32.683597342023745, -83.6330955963877)),
                            "KWRB" : ((32.6574423721327, -83.60992131083712),(32.62137642781735, -83.56528935231016)),
                            "KCSG" : ((32.524008383601796, -84.95611675437499),(32.509569501200396, -84.92453106069459)),
                            "KLSF" : ((32.35285359752097, -85.00750196621792),(32.32036460057268, -84.97119558456957)),
                            "KVPC" : ((34.134298799320526, -84.85488949616155),(34.11163267131712, -84.84506188299964)),
                            "KPUJ" : ((33.918588968395284, -84.9542132388301),(33.9113593252722, -84.92350731193577)),
                            "20GA" : ((33.75786687350433, -84.89420866960555),(33.753710107489034, -84.87590527653326)),
                            "KCCO" : ((33.32101305222862, -84.78480373985899),(33.30519721802947, -84.75892578904403)),
                            "KFFC" : ((33.36521536248893, -84.5864940010924),(33.3504830048471, -84.56035855816526)),
                            "KHMP" : ((33.39512670215451, -84.34692455441983),(33.37753249390988, -84.30718494833276)),
                            "K6A2" : ((33.23280693046773, -84.28462487920723),(33.22245015775456, -84.26726562361618)),
                            "7GA7" : ((33.53877537454595, -84.1868773241513),(33.53292670678657, -84.17172820866593)),
                            "KCVC" : ((33.63791022233747, -83.85994448630161),(33.62719074140847, -83.83436694287587)),
                            "GA80" : ((33.78671275123858, -83.99396717595363),(33.77969487926457, -83.98453652969891)),
                            "KCNI" : ((34.321231171327156, -84.4337646206607),(34.3042521001135, -84.41149155851647)),
                            "KCTJ" : ((33.643204937288004, -85.16388426591334),(33.62155154269318, -85.1465035526794)),

                            "KGVL" : ((34.280821510211396, -83.84232676918437),(34.26386973722269, -83.81790793995089)),
                            "KJCA" : ((34.18548827666244, -83.57044033102997),(34.16397219709441, -83.54812435354442)),
                            "KWDR" : ((33.991733688136875, -83.6820046527662),(33.972766422325066, -83.65518256438673)),
                            "KD73" : ((33.790485329899184, -83.70455252020739),(33.77471952975005, -83.6854122779794)),
                            "K52A" : ((33.617346046236825, -83.46999787562578),(33.60716014017075, -83.4526386200625)),
                            "KCPP" : ((33.60264118449513, -83.15635451973085),(33.59206030957636, -83.12021980234081)),
                            "KMLJ" : ((33.16103806139128, -83.25972628478928),(33.149900294452685, -83.22848391630951)),
                            "KOKZ" : ((32.97255498162089, -82.85094497244432),(32.958692728497404, -82.82734153471925)),
                            "KDBN" : ((32.5768457717887, -82.99969596577148),(32.55557912766473, -82.973345946202)),
                            "KSBO" : ((32.618167011395485, -82.38574620893691),(32.60041717314599, -82.35716459158677)),
                            "KEZM" : ((32.23155358848026, -83.13889121865921),(32.202870427956235, -83.12052345257496)),
                            "K48A" : ((32.40661817273822, -83.29247953918131),(32.39563921929835, -83.27149393727666)),
                            "KPXE" : ((32.52012493445319, -83.77429667912298),(32.50195755993499, -83.76489821937427)),
                            "KMAC" : ((32.83129704387812, -83.57551588200319),(32.814743731749246, -83.55019583062537)),
                            "K51A" : ((32.28630041936245, -83.44552107244091),(32.28054982789504, -83.4306509066741)),
                            "K53A" : ((32.31195824192618, -84.01354542826142),(32.29356752890295, -84.00324574634502)),
                            "KACJ" : ((32.118377832012655, -84.20208173237634),(32.101365752072425, -84.17757707248357)),
                            "K6A1" : ((32.5789104047182, -84.25323660810177),(32.56100811021088, -84.24023325968231)),
                            "KOPN" : ((32.96260693346057, -84.27995367435985),(32.94787880968296, -84.25287409398797)),
                            "KPIM" : ((32.847340839521465, -84.89574060324561),(32.83807448199966, -84.86909017628692)),
                            "KLGC" : ((33.02075035416216, -85.08643290592308),(33.00077732305843, -85.06021163237757)),
                            "K7A3" : ((32.81826254136854, -85.24189181203319),(32.8056025463305, -85.22004790330216)),
                            "KAUO" : ((32.62294854230868, -85.44577539710228),(32.6036089481974, -85.42169989062269)),
                            "K06A" : ((32.467196885195975, -85.69169752747186),(32.45227810652603, -85.66933863464502)),
                            "K07A" : ((32.17242321285936, -85.81893294618413),(32.15880006694533, -85.80133765624363)),
                            "KEUF" : ((31.960319311305707, -85.13416856365022),(31.94338709311029, -85.12266725217691)),
                            "4GA5" : ((32.10182751196296, -84.37725665768895),(32.08204890343009, -84.36472537802396)),
                            "K5A9" : ((32.94711477650484, -84.70272786449085),(32.929646555035866, -84.69036824619117))},

                "A80ALL" : {"KATL" : ((33.66160132114376, -84.4567732450538),(33.61374004734878,-84.39639798954067)), 
                            "KPDK" : ((33.88584377733848, -84.31037981332257),(33.86777939460844, -84.29467279840003)),
                            "KAHN" : ((33.9540766285094, -83.34223955210349),(33.940868873503796, -83.31558912314766)),
                            "KFTY" : ((33.78279814861325, -84.53293817967267),(33.76835092467223, -84.5060731738479)),
                            "KRYY" : ((34.01806592382934, -84.60951066352965),(34.00856797197957, -84.58389020270525)),
                            "KMGE" : ((33.92439571872648, -84.539492361338),(33.90719431974648, -84.49717783156599)),
                            "KLZU" : ((33.981190473249285, -83.97486176323365),(33.974784696390905, -83.94932713309667)),
                            "KMCN" : ((32.706494713728155, -83.66622624254232),(32.683597342023745, -83.6330955963877)),
                            "KWRB" : ((32.6574423721327, -83.60992131083712),(32.62137642781735, -83.56528935231016)),
                            "KCSG" : ((32.524008383601796, -84.95611675437499),(32.509569501200396, -84.92453106069459)),
                            "KLSF" : ((32.35285359752097, -85.00750196621792),(32.32036460057268, -84.97119558456957)),
                            "KVPC" : ((34.134298799320526, -84.85488949616155),(34.11163267131712, -84.84506188299964)),
                            "KPUJ" : ((33.918588968395284, -84.9542132388301),(33.9113593252722, -84.92350731193577)),
                            "20GA" : ((33.75786687350433, -84.89420866960555),(33.753710107489034, -84.87590527653326)),
                            "KCCO" : ((33.32101305222862, -84.78480373985899),(33.30519721802947, -84.75892578904403)),
                            "KFFC" : ((33.36521536248893, -84.5864940010924),(33.3504830048471, -84.56035855816526)),
                            "KHMP" : ((33.39512670215451, -84.34692455441983),(33.37753249390988, -84.30718494833276)),
                            "K6A2" : ((33.23280693046773, -84.28462487920723),(33.22245015775456, -84.26726562361618)),
                            "7GA7" : ((33.53877537454595, -84.1868773241513),(33.53292670678657, -84.17172820866593)),
                            "KCVC" : ((33.63791022233747, -83.85994448630161),(33.62719074140847, -83.83436694287587)),
                            "GA80" : ((33.78671275123858, -83.99396717595363),(33.77969487926457, -83.98453652969891)),
                            "KCNI" : ((34.321231171327156, -84.4337646206607),(34.3042521001135, -84.41149155851647)),
                            "KCTJ" : ((33.643204937288004, -85.16388426591334),(33.62155154269318, -85.1465035526794)),

                            "KGVL" : ((34.280821510211396, -83.84232676918437),(34.26386973722269, -83.81790793995089)),
                            "KJCA" : ((34.18548827666244, -83.57044033102997),(34.16397219709441, -83.54812435354442)),
                            "KWDR" : ((33.991733688136875, -83.6820046527662),(33.972766422325066, -83.65518256438673)),
                            "KD73" : ((33.790485329899184, -83.70455252020739),(33.77471952975005, -83.6854122779794)),
                            "K52A" : ((33.617346046236825, -83.46999787562578),(33.60716014017075, -83.4526386200625)),
                            "KCPP" : ((33.60264118449513, -83.15635451973085),(33.59206030957636, -83.12021980234081)),
                            "KMLJ" : ((33.16103806139128, -83.25972628478928),(33.149900294452685, -83.22848391630951)),
                            "KOKZ" : ((32.97255498162089, -82.85094497244432),(32.958692728497404, -82.82734153471925)),
                            "KDBN" : ((32.5768457717887, -82.99969596577148),(32.55557912766473, -82.973345946202)),
                            "KSBO" : ((32.618167011395485, -82.38574620893691),(32.60041717314599, -82.35716459158677)),
                            "KEZM" : ((32.23155358848026, -83.13889121865921),(32.202870427956235, -83.12052345257496)),
                            "K48A" : ((32.40661817273822, -83.29247953918131),(32.39563921929835, -83.27149393727666)),
                            "KPXE" : ((32.52012493445319, -83.77429667912298),(32.50195755993499, -83.76489821937427)),
                            "KMAC" : ((32.83129704387812, -83.57551588200319),(32.814743731749246, -83.55019583062537)),
                            "K51A" : ((32.28630041936245, -83.44552107244091),(32.28054982789504, -83.4306509066741)),
                            "K53A" : ((32.31195824192618, -84.01354542826142),(32.29356752890295, -84.00324574634502)),
                            "KACJ" : ((32.118377832012655, -84.20208173237634),(32.101365752072425, -84.17757707248357)),
                            "K6A1" : ((32.5789104047182, -84.25323660810177),(32.56100811021088, -84.24023325968231)),
                            "KOPN" : ((32.96260693346057, -84.27995367435985),(32.94787880968296, -84.25287409398797)),
                            "KPIM" : ((32.847340839521465, -84.89574060324561),(32.83807448199966, -84.86909017628692)),
                            "KLGC" : ((33.02075035416216, -85.08643290592308),(33.00077732305843, -85.06021163237757)),
                            "K7A3" : ((32.81826254136854, -85.24189181203319),(32.8056025463305, -85.22004790330216)),
                            "KAUO" : ((32.62294854230868, -85.44577539710228),(32.6036089481974, -85.42169989062269)),
                            "K06A" : ((32.467196885195975, -85.69169752747186),(32.45227810652603, -85.66933863464502)),
                            "K07A" : ((32.17242321285936, -85.81893294618413),(32.15880006694533, -85.80133765624363)),
                            "KEUF" : ((31.960319311305707, -85.13416856365022),(31.94338709311029, -85.12266725217691)),
                            "4GA5" : ((32.10182751196296, -84.37725665768895),(32.08204890343009, -84.36472537802396)),
                            "K5A9" : ((32.94711477650484, -84.70272786449085),(32.929646555035866, -84.69036824619117))},

                "ZTL" :    {"KATL" : ((33.66160132114376, -84.4567732450538),(33.61374004734878,-84.39639798954067)),
                            "KCLT" : ((35.2323196840276,-80.97532070484328),(35.19812613679431,-80.92504772311364)),
                            "KPDK" : ((33.88584377733848, -84.31037981332257),(33.86777939460844, -84.29467279840003)),
                            "KAHN" : ((33.9540766285094, -83.34223955210349),(33.940868873503796, -83.31558912314766)),
                            "KFTY" : ((33.78279814861325, -84.53293817967267),(33.76835092467223, -84.5060731738479)),
                            "KRYY" : ((34.01806592382934, -84.60951066352965),(34.00856797197957, -84.58389020270525)),
                            "KMGE" : ((33.92439571872648, -84.539492361338),(33.90719431974648, -84.49717783156599)),
                            "KLZU" : ((33.981190473249285, -83.97486176323365),(33.974784696390905, -83.94932713309667)),
                            "KMCN" : ((32.706494713728155, -83.66622624254232),(32.683597342023745, -83.6330955963877)),
                            "KWRB" : ((32.6574423721327, -83.60992131083712),(32.62137642781735, -83.56528935231016)),
                            "KCSG" : ((32.524008383601796, -84.95611675437499),(32.509569501200396, -84.92453106069459)),
                            "KLSF" : ((32.35285359752097, -85.00750196621792),(32.32036460057268, -84.97119558456957)),
                            "KAGS" : ((33.38431894042706, -81.9800361075031),(33.360199147953026, -81.94780668360094)),
                            "KAVL" : ((35.45024496074822, -82.55072847568015),(35.424125846590464, -82.53197447001651)),
                            "KBHM" : ((33.57413878244034, -86.77696067339015),(33.55296874381666, -86.7306121011445)),
                            "KTCL" : ((33.2352025266994, -87.62654866926034),(33.20439869303448, -87.60037030895185)),
                            "KCHA" : ((35.049261224859045, -85.21148842212565),(35.02065794468386, -85.19363563873289)),
                            "KGSO" : ((36.11934448224124, -79.96366556161747),(36.08009205818057, -79.91208131721585)),
                            "KINT" : ((36.14600883289731, -80.2348108323373),(36.12254399263099, -80.20949077904496)),
                            "KGSP" : ((34.91283847558762, -82.2342604646281),(34.874541090867005, -82.20606508317479)),
                            "KGMU" : ((34.856977303456674, -82.36052424358789),(34.839825554426774, -82.34425932792081)),
                            "KGYH" : ((34.76976667242393, -82.39198919030697),(34.74138327443452, -82.3592447823220)),
                            "KHKY" : ((35.75033407939169, -81.40012291269115),(35.73511242544853, -81.3786437826562)),
                            "KJQF" : ((35.40646408870109, -80.7152695290194),(35.376534270098354, -80.705334626720)),
                            "KVUJ" : ((35.42452175090049, -80.16033764123814),(35.40539042674286, -80.138536646096)),
                            "KMGM" : ((32.31006277880906, -86.41273587533833),(32.29159912500093, -86.37733071590472)),
                            "KMXF" : ((32.39753740124293, -86.37726903604599),(32.367493083504456, -86.35182023661655)),
                            "KTRI" : ((36.48772000522447, -82.42556968501692),(36.46038860112367, -82.39218154680279)),
                            "KTYS" : ((35.824848376007616, -84.01527157210842),(35.79672807375963, -83.97553196286273))},
                "KATL" : {"KATL" : ((33.66160132114376, -84.4567732450538),(33.61374004734878,-84.39639798954067))},
                "KCLT" : {"KCLT" :((35.2323196840276,-80.97532070484328),(35.19812613679431,-80.92504772311364))},
                # A80 Satellite Fields TODO: This is scuffed, fix in future:
                "KPDK" : {"KPDK" :((33.88584377733848, -84.31037981332257),(33.86777939460844, -84.29467279840003))},
                "KAHN" : {"KAHN" :((33.9540766285094, -83.34223955210349),(33.940868873503796, -83.31558912314766))},
                "KFTY" : {"KFTY" :((33.78279814861325, -84.53293817967267),(33.76835092467223, -84.5060731738479))},
                "KRYY" : {"KRYY" :((34.01806592382934, -84.60951066352965),(34.00856797197957, -84.58389020270525))},
                "KMGE" : {"KMGE" :((33.92439571872648, -84.539492361338),(33.90719431974648, -84.49717783156599))},
                "KLZU" : {"KLZU" :((33.981190473249285, -83.97486176323365),(33.974784696390905, -83.94932713309667))},
                "KMCN" : {"KMCN" :((32.706494713728155, -83.66622624254232),(32.683597342023745, -83.6330955963877))},
                "KWRB" : {"KWRB" :((32.6574423721327, -83.60992131083712),(32.62137642781735, -83.56528935231016))},
                "KCSG" : {"KCSG" :((32.524008383601796, -84.95611675437499),(32.509569501200396, -84.92453106069459))},
                "KLSF" : {"KLSF" :((32.35285359752097, -85.00750196621792),(32.32036460057268, -84.97119558456957))},
                "KAGS" : {"KAGS" :((33.38431894042706, -81.9800361075031),(33.360199147953026, -81.94780668360094))},
                "KAVL" : {"KAVL" :((35.45024496074822, -82.55072847568015),(35.424125846590464, -82.53197447001651))},
                "KBHM" : {"KBHM" :((33.57413878244034, -86.77696067339015),(33.55296874381666, -86.7306121011445))},
                "KTCL" : {"KTCL" :((33.2352025266994, -87.62654866926034),(33.20439869303448, -87.60037030895185))},
                "KCHA" : {"KCHA" :((35.049261224859045, -85.21148842212565),(35.02065794468386, -85.19363563873289))},
                "KGSO" : {"KGSO" :((36.11934448224124, -79.96366556161747),(36.08009205818057, -79.91208131721585))},
                "KINT" : {"KINT" :((36.14600883289731, -80.2348108323373),(36.12254399263099, -80.20949077904496))},
                "KGSP" : {"KGSP" :((34.91283847558762, -82.2342604646281),(34.874541090867005, -82.20606508317479))},
                "KGMU" : {"KGMU" :((34.856977303456674, -82.36052424358789),(34.839825554426774, -82.34425932792081))},
                "KGYH" : {"KGYH" :((34.76976667242393, -82.39198919030697),(34.74138327443452, -82.3592447823220))},
                "KHKY" : {"KHKY" :((35.75033407939169, -81.40012291269115),(35.73511242544853, -81.3786437826562))},
                "KJQF" : {"KJQF" :((35.40646408870109, -80.7152695290194),(35.376534270098354, -80.705334626720))},
                "KVUJ" : {"KVUJ" :((35.42452175090049, -80.16033764123814),(35.40539042674286, -80.138536646096))},
                "KMGM" : {"KMGM" :((32.31006277880906, -86.41273587533833),(32.29159912500093, -86.37733071590472))},
                "KMXF" : {"KMXF" :((32.39753740124293, -86.37726903604599),(32.367493083504456, -86.35182023661655))},
                "KTRI" : {"KTRI" :((36.48772000522447, -82.42556968501692),(36.46038860112367, -82.39218154680279))},
                "KTYS" : {"KTYS" :((35.824848376007616, -84.01527157210842),(35.79672807375963, -83.97553196286273))}
                }





class DataCollector:
    def __init__(self, json_url:str, control_area:str, printer:Printer, cached_printed_departures:list, cached_departures_file_path:str) -> None:
        self.callsign_list = {}
        self.json_url = json_url
        self.control_area = control_area
        self.printer = printer
        self.printed_callsigns = cached_printed_departures
        self.cached_departures_file_path = cached_departures_file_path
        # TODO Load from saved JSON File
        self.control_area_dict = control_areas

    def check_for_updates(self):
        self.update_json(self.json_url)
        self.scan_pilots()

    def get_json(self):
        return self.json_file
    
    def get_callsign_list(self):
        return self.callsign_list
    
    def add_callsign_to_dep_list(self, pilot_callsign:str, new_pilot_data_associated_with_callsign:dict):
        new_pilot_route:str = new_pilot_data_associated_with_callsign['flight_plan']['route']
        if '+' in new_pilot_route:
            new_pilot_route = new_pilot_route.replace('+', '')

        if pilot_callsign in self.callsign_list:
           
            current_pilot_route:str = self.callsign_list[pilot_callsign]['flight_plan']['route']
            if '+' in current_pilot_route:
                current_pilot_route = current_pilot_route.replace('+', '')

            if new_pilot_route != current_pilot_route:
                # pilot has received a reroute
                self.callsign_list[pilot_callsign] = new_pilot_data_associated_with_callsign
                self.printer.print_callsign_data(self.callsign_list[pilot_callsign], pilot_callsign, self.control_area)
        else:
            # new_pilot_data_associated_with_callsign['flight_plan']['route'] = new_pilot_route
            self.callsign_list[pilot_callsign] = new_pilot_data_associated_with_callsign

    def scan_for_new_aircraft_automatic(self):
        
        while(True):
            callsign_table = self.get_callsign_list()
            # TODO, lock callsign list to leep them synced
            for callsign_to_print in callsign_table:
                if callsign_to_print not in self.printed_callsigns:
                    self.printer.print_callsign_data(callsign_table.get(callsign_to_print), callsign_to_print, self.control_area)
                    self.printed_callsigns.append(callsign_to_print)
                # auto_update cached callsigns
            file = open(self.cached_departures_file_path, 'wb')
            pickle.dump(self.printed_callsigns, file)
            file.close()
            time.sleep(1)

    def get_callsign_data(self, callsign) -> dict:
        if callsign not in self.callsign_list:
            return None
        else:
            return self.callsign_list.get(callsign)
    
    def in_geographical_region_wip(self, control_area:str, departure:str, airplane_lat_long:tuple) -> bool:

        airports_dict = self.control_area_dict.get(control_area)
        nw_lat_long_point, se_lat_long_point = airports_dict.get(departure)
        #KATL NW Lat_Long point
        northern_latitude, western_longitude = nw_lat_long_point
        #KATL SE Lat_long point
        southern_latitude, eastern_longitude = se_lat_long_point
        # airplane lat_long position
        airplane_lat, airplane_long = airplane_lat_long
    
        if (airplane_lat < northern_latitude and airplane_lat > southern_latitude) and (airplane_long > western_longitude and airplane_long < eastern_longitude):
            return True
        
    def in_geographical_region(self, airport:str, airplane_lat_long:tuple) -> bool:
        # Dict of the form: { airport ICAO : ((NW lat_long point),(SE lat_long point))}
        # TODO create multiple dicts for certain airport groupings(allowing strips to be printed from multiple fields.) 
        # IE: A80SAT = {"KPDK" : ((33.885843...)), "KAHN" : ((33.95407...,))}. param airport can become a string that tells which DICT to use
        airports = {
        "KATL" : ((33.66160132114376, -84.4567732450538),(33.61374004734878,-84.39639798954067)),
        "KCLT" : ((35.2323196840276,-80.97532070484328),(35.19812613679431,-80.92504772311364)),
        # A80 Satellite Fields:
            "KPDK" : ((33.88584377733848, -84.31037981332257),(33.86777939460844, -84.29467279840003)),
            "KAHN" : ((33.9540766285094, -83.34223955210349),(33.940868873503796, -83.31558912314766)),
            "KFTY" : ((33.78279814861325, -84.53293817967267),(33.76835092467223, -84.5060731738479)),
            "KRYY" : ((34.01806592382934, -84.60951066352965),(34.00856797197957, -84.58389020270525)),
            "KMGE" : ((33.92439571872648, -84.539492361338),(33.90719431974648, -84.49717783156599)),
            "KLZU" : ((33.981190473249285, -83.97486176323365),(33.974784696390905, -83.94932713309667)),
            "KMCN" : ((32.706494713728155, -83.66622624254232),(32.683597342023745, -83.6330955963877)),
            "KWRB" : ((32.6574423721327, -83.60992131083712),(32.62137642781735, -83.56528935231016)),
            "KCSG" : ((32.524008383601796, -84.95611675437499),(32.509569501200396, -84.92453106069459)),
            "KLSF" : ((32.35285359752097, -85.00750196621792),(32.32036460057268, -84.97119558456957)),
        "KAGS" : ((33.38431894042706, -81.9800361075031),(33.360199147953026, -81.94780668360094)),
        "KAVL" : ((35.45024496074822, -82.55072847568015),(35.424125846590464, -82.53197447001651)),
        "KBHM" : ((33.57413878244034, -86.77696067339015),(33.55296874381666, -86.7306121011445)),
        "KTCL" : ((33.2352025266994, -87.62654866926034),(33.20439869303448, -87.60037030895185)),
        "KCHA" : ((35.049261224859045, -85.21148842212565),(35.02065794468386, -85.19363563873289)),
        "KGSO" : ((36.11934448224124, -79.96366556161747),(36.08009205818057, -79.91208131721585)),
        "KINT" : ((36.14600883289731, -80.2348108323373),(36.12254399263099, -80.20949077904496)),
        "KGSP" : ((34.91283847558762, -82.2342604646281),(34.874541090867005, -82.20606508317479)),
        "KGMU" : ((34.856977303456674, -82.36052424358789),(34.839825554426774, -82.34425932792081)),
        "KGYH" : ((34.76976667242393, -82.39198919030697),(34.74138327443452, -82.3592447823220)),
        "KHKY" : ((35.75033407939169, -81.40012291269115),(35.73511242544853, -81.3786437826562)),
        "KJQF" : ((35.40646408870109, -80.7152695290194),(35.376534270098354, -80.705334626720)),
        "KVUJ" : ((35.42452175090049, -80.16033764123814),(35.40539042674286, -80.138536646096)),
        "KMGM" : ((32.31006277880906, -86.41273587533833),(32.29159912500093, -86.37733071590472)),
        "KMXF" : ((32.39753740124293, -86.37726903604599),(32.367493083504456, -86.35182023661655)),
        "KTRI" : ((36.48772000522447, -82.42556968501692),(36.46038860112367, -82.39218154680279)),
        "KTYS" : ((35.824848376007616, -84.01527157210842),(35.79672807375963, -83.97553196286273))
        }
        
        nw_lat_long_point, se_lat_long_point = airports.get(airport)
        #KATL NW Lat_Long point
        northern_latitude, western_longitude = nw_lat_long_point
        #KATL SE Lat_long point
        southern_latitude, eastern_longitude = se_lat_long_point
        # airplane lat_long position
        airplane_lat, airplane_long = airplane_lat_long
    
        if (airplane_lat < northern_latitude and airplane_lat > southern_latitude) and (airplane_long > western_longitude and airplane_long < eastern_longitude):
            return True
        
    def scan_pilots(self):
        connected_pilots = self.json_file['pilots']
        # Interpreting/Filtering JSON Data
        for i in range(len(connected_pilots)):
            # pilot at index i information
            current_pilot = connected_pilots[i]
            try:
                pilot_departure_airport = current_pilot['flight_plan']['departure']
                lat_long_tuple = (current_pilot['latitude'], current_pilot['longitude'])
                pilot_callsign = current_pilot['callsign'].upper()
                
                if pilot_departure_airport in self.control_area_dict.get(self.control_area) and self.in_geographical_region_wip(self.control_area, pilot_departure_airport, lat_long_tuple):
                    # Save callsign of pilot and associated JSON Info
                    # to access, use: self.callsign_list.get(**callsign**)
                    # that will return the portion of the JSON with all of the pilot's info from when the system added them(flightplan, CID, etc.)
                    self.add_callsign_to_dep_list(pilot_callsign, current_pilot)
                
                elif (pilot_departure_airport in self.control_area_dict.get(self.control_area)) and (not self.in_geographical_region_wip(self.control_area, pilot_departure_airport, lat_long_tuple)) and (pilot_callsign in self.callsign_list):
                    self.remove_callsign_from_lists(pilot_callsign)
            except TypeError as e1:
                pass        
            except Exception as e2:
                print(e2)  

    def remove_callsign_from_lists(self, callsign_to_remove):
        self.callsign_list.pop(callsign_to_remove)
        if callsign_to_remove in self.printed_callsigns:
            self.printed_callsigns.remove(callsign_to_remove)

    def update_json(self, json_url):
        r = requests.get(json_url)
        self.json_file = r.json()